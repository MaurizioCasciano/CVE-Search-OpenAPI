from __future__ import annotations
from fastapi import FastAPI
from pydantic import BaseModel, Field
from typing import List, Optional
import os
import json

app = FastAPI()

class Access(BaseModel):
    authentication: str
    complexity: str
    vector: str

class _(BaseModel):
    Entry_ID: str
    Entry_Name: str
    URL: str

class OWASPAttacks(BaseModel):
    _: _

class Taxonomy(BaseModel):
    OWASP_Attacks: Optional[dict] = Field(None, alias='OWASP Attacks')
    WASC: Optional[dict] = None

class CapecItem(BaseModel):
    execution_flow: Optional[dict]
    id: str
    loa: str
    name: str
    prerequisites: str
    related_capecs: List[str]
    related_weakness: List[str]
    solutions: str
    summary: str
    taxonomy: Taxonomy
    typical_severity: str

class Exploitability3(BaseModel):
    attackcomplexity: str
    attackvector: str
    privilegesrequired: str
    scope: str
    userinteraction: str

class Impact(BaseModel):
    availability: str
    confidentiality: str
    integrity: str

class Impact3(BaseModel):
    availability: str
    confidentiality: str
    integrity: str

class LastModified(BaseModel):
    _date: int = Field(..., alias='$date')

class Model(BaseModel):
    Modified: Optional[str] = None
    Published: Optional[str] = None
    access: Optional[Access] = None
    assigner: Optional[str] = None
    capec: Optional[List[CapecItem]] = None
    cvss: Optional[float] = None
    cvss_time: Optional[str] = Field(None, alias='cvss-time')
    cvss_vector: Optional[str] = Field(None, alias='cvss-vector')
    cvss3: Optional[float] = None
    cvss3_vector: Optional[str] = Field(None, alias='cvss3-vector')
    cwe: Optional[str] = None
    exploitability3: Optional[Exploitability3] = None
    exploitabilityScore: Optional[float] = None
    exploitabilityScore3: Optional[float] = None
    id: Optional[str] = None
    impact: Optional[Impact] = None
    impact3: Optional[Impact3] = None
    impactScore: Optional[float] = None
    impactScore3: Optional[float] = None
    last_modified: Optional[LastModified] = Field(None, alias='last-modified')
    products: Optional[List[str]] = None
    references: Optional[List[str]] = None
    summary: Optional[str] = None
    vendors: Optional[List[str]] = None
    vulnerable_configuration: Optional[List[str]] = None
    vulnerable_configuration_cpe_2_2: Optional[List] = None
    vulnerable_configuration_stems: Optional[List[str]] = None
    vulnerable_product: Optional[List[str]] = None
    vulnerable_product_stems: Optional[List[str]] = None


#@app.post("/cvesfromcpe", response_model=list[ProductCVE])
@app.get("/cvesfromcpe/{cpe}", response_model=List[Model])
async def cves_from_cpe(cpe: str) -> List[Model]:
    print(cpe)

    list_cves: List[Model] = []

    cmd = "../bin/search.py -a -p " + cpe +" -o json --only-if-vulnerable > ./output.json"
    os.system(cmd)

    with open("./output.json") as f:
        output = json.loads("[" + f.read().replace("}\n{", "},\n{") + "]")

    for o in output:
        cve = Model(**o)
        list_cves.append(cve)

    return list_cves

